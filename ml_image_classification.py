# -*- coding: utf-8 -*-
"""ML Image Classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CqJd989hV3lZomYlJcg1_6yPU6p9THBN
"""

import tensorflow as tf
import os
import matplotlib.pyplot as plt
import numpy as np

def get_image_from_url(image_url):
  # If the temporary test_image.jpg file already exists,
  # delete it so a new one can be made.
  if os.path.exists('/root/.keras/datasets/test_image.jpg'):
    os.remove('/root/.keras/datasets/test_image.jpg')

  image_path = tf.keras.utils.get_file('test_image.jpg', origin=image_url)
  return image_path

def print_classifications(classifications):
    for (classification, number) in zip(classifications[0], range(1, len(classifications[0])+1)):
      print('{}. {} {:.2f}%'.format(number, classification[1], classification[2]*100))

model =tf.keras.applications.VGG16()

def classify_image(image_url):
  image_path=get_image_from_url(image_url)
  image=tf.keras.preprocessing.image.load_img(image_path,target_size=(224,224))
  plt.figure()
  plt.imshow(image)
  image= tf.keras.preprocessing.image.img_to_array(image)
  image=np.expand_dims(image,axis=0)
  print(image)
  classification_result=model.predict(image,batch_size=1)
  classifications=tf.keras.applications.imagenet_utils.decode_predictions(classification_result,top=10)
  print_classifications(classifications)

classify_image('https://drive.google.com/uc?export=download&id=19PXsdlkTjLijoBfE4PYEAIqDjT--q0TH')